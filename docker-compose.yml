services:
  chatbot-fitbridge:
    image: rutkre/fitbridge-chatbot:latest
    restart: unless-stopped
    expose:
      - "8002"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chatbot-fitbridge.rule=Host(`chatbot-fitbridge.${DOMAIN_NAME}`)"
      - "traefik.http.routers.chatbot-fitbridge.entrypoints=websecure"
      - "traefik.http.routers.chatbot-fitbridge.tls=true"
      - "traefik.http.routers.chatbot-fitbridge.tls.certresolver=myresolver"
      - "traefik.http.routers.chatbot-fitbridge.priority=50"
      - "traefik.http.services.chatbot-fitbridge.loadbalancer.server.port=8002"
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - ${STACKS_VOLUME_PATH}/fitbridge/chatbot.env:/usr/src/app/.env
    networks:
      - proxy
  api-fitbridge:
    image: rutkre/fitbridge-be:latest
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8003
    expose:
      - "8003"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-fitbridge.rule=Host(`api-fitbridge.${DOMAIN_NAME}`)"
      - "traefik.http.routers.api-fitbridge.entrypoints=websecure"
      - "traefik.http.routers.api-fitbridge.tls=true"
      - "traefik.http.routers.api-fitbridge.tls.certresolver=myresolver"
      - "traefik.http.routers.api-fitbridge.priority=50"
      - "traefik.http.services.api-fitbridge.loadbalancer.server.port=8003"
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - ${STACKS_VOLUME_PATH}/fitbridge/appsettings.json:/app/appsettings.json
    deploy:
      mode: replicated
      replicas: 3
    logging:
      driver: loki
      options:
        loki-url: "http://127.0.0.1:3100/loki/api/v1/push"
        loki-retries: "2"
        loki-max-backoff: "800ms"
        loki-timeout: "1s"
        keep-file: "true"
    depends_on:
      - chatbot-fitbridge
    networks:
      - postgres
      - proxy

  redis-fitbridge:
    image: redis/redis-stack-server:latest
    restart: unless-stopped
    expose:
      - "6379"
    networks:
      - proxy
      - redis
    environment:
      - REDIS_ARGS=--requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "traefik.enable=false"
      - "com.centurylinklabs.watchtower.enable=true"

networks:
  postgres:
    external: true
  proxy:
    external: true
  redis:
    external: true
